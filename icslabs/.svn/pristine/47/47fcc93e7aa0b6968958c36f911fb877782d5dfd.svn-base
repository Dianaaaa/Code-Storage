# Execution begins at address 0 
	.pos 0 
	irmovq stack, %rsp  	# Set up stack pointer  
	call main		# Execute main program
	halt			# Terminate program 

# Sample linked list
	.align 8 
# source block	
src:
	.quad 0x00a
	.quad 0x0b0
	.quad 0xc00
# destination block
dest:
	.quad 0x111
	.quad 0x222
	.quad 0x333

main:	irmovq src,%rdi
	irmovq dest,%rsi
	irmovq $3,%rdx
	call copy_block		
	ret

# long copy_block(long *src, long *dest, long len)
# src in %rdi, dest in %rsi, len in %rdx
copy_block:
	xorq %rax,%rax		# set %rax to zero
	andq %rdx,%rdx		# set CC
	irmovq $8,%r8		# save immediate 1
	irmovq $1,%r9		# save immediate 8
	jmp	test
loop:
	mrmovq (%rdi),%r10
	rmmovq %r10,(%rsi)
	xorq %r10,%rax
	addq %r8,%rdi
	addq %r8,%rsi
	subq %r9,%rdx
test:	
	jne	loop		# test whether len is 0
   	ret	

# Stack starts here and grows to lower addresses
	.pos 0x200
stack:


